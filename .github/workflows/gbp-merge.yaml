name: GBP Merge
on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Git Repo URL to clone'
        type: string
        required: true
      target-branch:
        description: 'Branch to merge into'
        type: string
        default: ubuntu/latest
      source:
        description: 'Git source branch or tag to merge from'
        type: string
        default: debian/latest
  workflow_call:
    inputs:
      repo:
        description: 'Git Repo URL to clone'
        type: string
        required: true
      target-branch:
        description: 'Branch to merge into'
        type: string
        default: ubuntu/latest
      source:
        description: 'Branch to merge from'
        type: string
        default: debian/latest

env:
  DEBEMAIL: ${{ secrets.LP_EMAIL }}

jobs:
  merge-source-to-target:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git git-buildpackage git-merge-changelog
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 400 ~/.ssh/id_rsa
      - name: Clone Repository
        run: |
          git clone ${{ inputs.repo }} project
          cd project
          git config user.email ${{ secrets.LP_EMAIL }}
          git config user.name "${{ secrets.LP_USER }}"
      - name: Configure Merge Strategy
        run: |
          cat ~/.gitconfig config/.gitconfig > ~/.gitconfig
          cd project
          echo "changelog    merge=merge-changelog" > debian/.gitattributes
      - name: Merge Source Into Target Branch
        run: |
          cd project
          git checkout ${{ inputs.target-branch }}
          git merge ${{ inputs.source }}
      - name: Rebase Patches
        run: |
          cd project
          gbp pq import
          gbp pq export
          gbp dch
          git add debian
          git commit -m "Rebase patches" || true
      - name: Push Branch
        run: |
          cd project
          git push origin ${{ inputs.target-branch }}
      - name: Parse Project Name
        if: failure()
        id: parse-project-name
        run: echo "name=$(basename ${{ inputs.repo }} .git)" >> $GITHUB_OUTPUT
      - name: Create Issue
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          ISSUE_TITLE: "GBP Merge Failure: ${{ steps.parse-project-name.outputs.name }}/${{ inputs.source }}->${{ inputs.target-branch }}"
        with:
          update_existing: true
          search_existing: open
      - name: Clean Up
        if: always()
        run: |
          rm -rf ~/.ssh
      

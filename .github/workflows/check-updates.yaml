name: Check for Updates
on:
  schedule:
    - cron:  '30 5 * * *'
  workflow_dispatch:

jobs:
  check-for-updates:
    strategy:
      matrix:
        repo:
          - url: git@salsa.debian.org:ubuntu-desktop-helper/epiphany-browser.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-software.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gedit.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gedit-plugins.git
            #- url: git@salsa.debian.org:ubuntu-desktop-helper/glib.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/geary.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-calculator.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-system-monitor.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/orca.git
            branch: debian/sid
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-flashback.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/evince.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-boxes.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-remote-desktop.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-backgrounds.git
          - url: git@salsa.debian.org:ubuntu-desktop-helper/gnome-connections.git
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y devscripts
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 400 ~/.ssh/id_rsa
      - name: Clone repo
        run: |
          git clone ${{ matrix.repo.url }} project
      - name: Check for Update
        id: check-update
        continue-on-error: true
        run: |
          cd project
          uscan && echo "release=available" >> $GITHUB_OUTPUT
      - name: Create job
        if: steps.check-update.outputs.release == 'available'
        run: |
          BRANCH=${{ matrix.repo.branch }}
          if [[ -z "$BRANCH" ]]; then
              BRANCH_JSON=""
          else
              BRANCH_JSON="'branch':'$BRANCH'"
          fi
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/ubuntu/deb-ci/actions/workflows/59636522/dispatches \
            -d '{"ref":"main","inputs":{"repo":"${{ matrix.repo.url }}",$BRANCH_JSON}}'
